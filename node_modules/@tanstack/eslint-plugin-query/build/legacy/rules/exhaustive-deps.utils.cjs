"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/rules/exhaustive-deps.utils.ts
var exhaustive_deps_utils_exports = {};
__export(exhaustive_deps_utils_exports, {
  ExhaustiveDepsUtils: () => ExhaustiveDepsUtils
});
module.exports = __toCommonJS(exhaustive_deps_utils_exports);
var import_utils = require("@typescript-eslint/utils");
var import_ast_utils = require("../utils/ast-utils.cjs");
var ExhaustiveDepsUtils = {
  isRelevantReference(params) {
    var _a;
    const { reference, scopeManager, context } = params;
    const component = import_ast_utils.ASTUtils.getFunctionAncestor(context);
    if (component !== void 0 && !import_ast_utils.ASTUtils.isDeclaredInNode({
      scopeManager,
      reference,
      functionNode: component
    })) {
      return false;
    }
    return reference.identifier.name !== "undefined" && ((_a = reference.identifier.parent) == null ? void 0 : _a.type) !== import_utils.AST_NODE_TYPES.NewExpression && !ExhaustiveDepsUtils.isQueryClientReference(reference);
  },
  isQueryClientReference(reference) {
    var _a, _b, _c;
    const declarator = (_b = (_a = reference.resolved) == null ? void 0 : _a.defs[0]) == null ? void 0 : _b.node;
    return (declarator == null ? void 0 : declarator.type) === import_utils.AST_NODE_TYPES.VariableDeclarator && ((_c = declarator.init) == null ? void 0 : _c.type) === import_utils.AST_NODE_TYPES.CallExpression && declarator.init.callee.type === import_utils.AST_NODE_TYPES.Identifier && declarator.init.callee.name === "useQueryClient";
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ExhaustiveDepsUtils
});
//# sourceMappingURL=exhaustive-deps.utils.cjs.map