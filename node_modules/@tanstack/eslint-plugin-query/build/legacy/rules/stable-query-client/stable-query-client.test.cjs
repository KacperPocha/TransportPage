"use strict";

// src/rules/stable-query-client/stable-query-client.test.ts
var import_utils = require("@typescript-eslint/utils");
var import_test_utils = require("../../utils/test-utils.cjs");
var import_stable_query_client = require("./stable-query-client.rule.cjs");
var ruleTester = new import_utils.ESLintUtils.RuleTester({
  parser: "@typescript-eslint/parser",
  settings: {}
});
ruleTester.run("stable-query-client", import_stable_query_client.rule, {
  valid: [
    {
      name: "QueryClient is stable when wrapped in React.useState",
      code: import_test_utils.normalizeIndent`
        import { QueryClient } from "@tanstack/react-query";

        function Component() {
          const [queryClient] = React.useState(() => new QueryClient());
          return;
        }
      `
    },
    {
      name: "QueryClient is stable when wrapped in useState",
      code: import_test_utils.normalizeIndent`
        import { QueryClient } from "@tanstack/react-query";

        function Component() {
          const [queryClient] = useState(() => new QueryClient());
          return;
        }
      `
    },
    {
      name: "QueryClient is stable when wrapped in React.useMemo",
      code: import_test_utils.normalizeIndent`
          import { QueryClient } from "@tanstack/react-query";
  
          function Component() {
            const [queryClient] = React.useMemo(() => new QueryClient(), []);
            return;
          }
        `
    },
    {
      name: "QueryClient is stable when wrapped in useAnything",
      code: import_test_utils.normalizeIndent`
          import { QueryClient } from "@tanstack/react-query";
  
          function Component() {
            const [queryClient] = useAnything(() => new QueryClient());
            return;
          }
        `
    },
    {
      name: "QueryClient is imported from a non-tanstack package",
      code: import_test_utils.normalizeIndent`
        import { QueryClient } from "other-library";

        function Component() {
          const queryClient = new QueryClient();
          return;
        }
      `
    },
    {
      name: "QueryClient is not imported from @tanstack/react-query",
      code: import_test_utils.normalizeIndent`
        import { QueryClient } from "@tanstack/solid-query";

        function Component() {
          const queryClient = new QueryClient();
          return;
        }
      `
    },
    {
      name: "QueryClient is invoked outside of a function",
      code: import_test_utils.normalizeIndent`
        import { QueryClient } from "@tanstack/solid-query";

        const queryClient = new QueryClient();

        function Component() {
          return;
        }
      `
    },
    {
      name: "QueryClient is invoked in a non-component function",
      code: import_test_utils.normalizeIndent`
        import { QueryClient } from "@tanstack/solid-query";

        function someFn() {
          const queryClient = new QueryClient();
          return;
        }
      `
    },
    {
      name: "QueryClient is invoked in an async (react server) component",
      code: import_test_utils.normalizeIndent`
        import { QueryClient } from "@tanstack/solid-query";

        async function AsyncComponent() {
          const queryClient = new QueryClient();
          return;
        }
      `
    }
  ],
  invalid: [
    {
      name: "QueryClient is not stable when it is not wrapped in React.useState in component",
      code: import_test_utils.normalizeIndent`
        import { QueryClient } from "@tanstack/react-query";

        function Component() {
          const queryClient = new QueryClient();
          return;
        }
      `,
      output: import_test_utils.normalizeIndent`
        import { QueryClient } from "@tanstack/react-query";

        function Component() {
          const [queryClient] = React.useState(() => new QueryClient());
          return;
        }
      `,
      errors: [{ messageId: "unstable" }]
    },
    {
      name: "QueryClient is not stable when it is not wrapped in React.useState in custom hook",
      code: import_test_utils.normalizeIndent`
        import { QueryClient } from "@tanstack/react-query";

        function useHook() {
          const queryClient = new QueryClient();
          return;
        }
      `,
      output: import_test_utils.normalizeIndent`
        import { QueryClient } from "@tanstack/react-query";

        function useHook() {
          const [queryClient] = React.useState(() => new QueryClient());
          return;
        }
      `,
      errors: [{ messageId: "unstable" }]
    },
    {
      name: "preserve QueryClient options",
      code: import_test_utils.normalizeIndent`
        import { QueryClient } from "@tanstack/react-query";

        function Component() {
          const queryClient = new QueryClient({ defaultOptions: { /* */ } });
          return;
        }
      `,
      output: import_test_utils.normalizeIndent`
        import { QueryClient } from "@tanstack/react-query";

        function Component() {
          const [queryClient] = React.useState(() => new QueryClient({ defaultOptions: { /* */ } }));
          return;
        }
      `,
      errors: [{ messageId: "unstable" }]
    },
    {
      name: "preserve QueryClient variable declarator name",
      code: import_test_utils.normalizeIndent`
        import { QueryClient } from "@tanstack/react-query";

        function Component() {
          const customName = new QueryClient();
          return;
        }
      `,
      output: import_test_utils.normalizeIndent`
        import { QueryClient } from "@tanstack/react-query";

        function Component() {
          const [customName] = React.useState(() => new QueryClient());
          return;
        }
      `,
      errors: [{ messageId: "unstable" }]
    }
  ]
});
//# sourceMappingURL=stable-query-client.test.cjs.map